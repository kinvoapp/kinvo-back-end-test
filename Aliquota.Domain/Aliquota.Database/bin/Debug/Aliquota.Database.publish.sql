/*
Deployment script for DDD

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DDD"
:setvar DefaultFilePrefix "DDD"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLSERVER2016\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLSERVER2016\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Aplicacao]...';


GO
CREATE TABLE [dbo].[Aplicacao] (
    [ID]                   UNIQUEIDENTIFIER NOT NULL,
    [ProdutoFinanceiro_ID] UNIQUEIDENTIFIER NOT NULL,
    [Cliente_ID]           UNIQUEIDENTIFIER NOT NULL,
    [DataAplicacao]        DATETIME         NOT NULL,
    [DataRetirada]         DATETIME         NULL,
    [Valor]                DECIMAL (12, 2)  NOT NULL,
    CONSTRAINT [PK_Aplicacao] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Cliente]...';


GO
CREATE TABLE [dbo].[Cliente] (
    [ID]   UNIQUEIDENTIFIER NOT NULL,
    [Nome] VARCHAR (255)    NOT NULL,
    CONSTRAINT [PK_Cliente] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ProdutoFinanceiro]...';


GO
CREATE TABLE [dbo].[ProdutoFinanceiro] (
    [ID]         UNIQUEIDENTIFIER NOT NULL,
    [Descricao]  VARCHAR (255)    NOT NULL,
    [Rendimento] DECIMAL (5, 2)   NOT NULL,
    CONSTRAINT [PK_ProdutoFinanceiro] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ProdutoFinanceiro_ID]...';


GO
ALTER TABLE [dbo].[Aplicacao] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutoFinanceiro_ID] FOREIGN KEY ([ProdutoFinanceiro_ID]) REFERENCES [dbo].[ProdutoFinanceiro] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Cliente_ID]...';


GO
ALTER TABLE [dbo].[Aplicacao] WITH NOCHECK
    ADD CONSTRAINT [FK_Cliente_ID] FOREIGN KEY ([Cliente_ID]) REFERENCES [dbo].[Cliente] ([ID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Aplicacao] WITH CHECK CHECK CONSTRAINT [FK_ProdutoFinanceiro_ID];

ALTER TABLE [dbo].[Aplicacao] WITH CHECK CHECK CONSTRAINT [FK_Cliente_ID];


GO
PRINT N'Update complete.';


GO
