// <auto-generated />
using System;
using Aliquota.Domain.FrameworksAndDrivers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Domain.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("FinanceProducts");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProductMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinanceProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxOver")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinanceProductId");

                    b.HasIndex("UserId");

                    b.ToTable("FinanceProductMoves");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProductWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FinanceProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinanceProductId");

                    b.HasIndex("UserId");

                    b.ToTable("FinanceProductWallets");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.ProductTradeMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FistFinanceProductMoveId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondFinanceProductMoveId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FistFinanceProductMoveId");

                    b.HasIndex("SecondFinanceProductMoveId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductTradeMoves");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProductMove", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Models.FinanceProduct", "FinanceProduct")
                        .WithMany("FinanceProductMoves")
                        .HasForeignKey("FinanceProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aliquota.Domain.Entities.Models.User", "User")
                        .WithMany("FinanceProductMoves")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceProduct");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProductWallet", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Models.FinanceProduct", "FinanceProduct")
                        .WithMany("FinanceProductWallets")
                        .HasForeignKey("FinanceProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aliquota.Domain.Entities.Models.User", "User")
                        .WithMany("FinanceProductWallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinanceProduct");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.ProductTradeMove", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Models.FinanceProductMove", "FistFinanceProductMove")
                        .WithMany()
                        .HasForeignKey("FistFinanceProductMoveId");

                    b.HasOne("Aliquota.Domain.Entities.Models.FinanceProductMove", "SecondFinanceProductMove")
                        .WithMany()
                        .HasForeignKey("SecondFinanceProductMoveId");

                    b.HasOne("Aliquota.Domain.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("FistFinanceProductMove");

                    b.Navigation("SecondFinanceProductMove");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.FinanceProduct", b =>
                {
                    b.Navigation("FinanceProductMoves");

                    b.Navigation("FinanceProductWallets");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Models.User", b =>
                {
                    b.Navigation("FinanceProductMoves");

                    b.Navigation("FinanceProductWallets");
                });
#pragma warning restore 612, 618
        }
    }
}
