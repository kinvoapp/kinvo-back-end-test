// <auto-generated />
using System;
using Aliquota.Domain.AppConsole.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Domain.AppConsole.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Aliquota.Domain.Aplicacao", b =>
                {
                    b.Property<int>("AplicacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtual")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataMov")
                        .HasColumnType("Date");

                    b.Property<decimal>("ValorAplicado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorAtual")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AplicacaoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Aplicacoes");
                });

            modelBuilder.Entity("Aliquota.Domain.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Aliquota.Domain.Rendimento", b =>
                {
                    b.Property<int>("RendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RendimentoId");

                    b.HasIndex("Data")
                        .IsUnique();

                    b.ToTable("Rendimentos");
                });

            modelBuilder.Entity("Aliquota.Domain.Resgate", b =>
                {
                    b.Property<int>("ResgateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataMov")
                        .HasColumnType("Date");

                    b.Property<decimal>("IR")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ResgateId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Resgates");
                });

            modelBuilder.Entity("Aliquota.Domain.Aplicacao", b =>
                {
                    b.HasOne("Aliquota.Domain.Cliente", "Cliente")
                        .WithMany("Aplicacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aliquota.Domain.Resgate", b =>
                {
                    b.HasOne("Aliquota.Domain.Cliente", "Cliente")
                        .WithMany("Resgates")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
