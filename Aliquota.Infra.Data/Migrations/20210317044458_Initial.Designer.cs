// <auto-generated />
using System;
using Aliquota.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Infra.Data.Migrations
{
    [DbContext(typeof(PersistContext))]
    [Migration("20210317044458_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aliquota.Domain.Entities.Commercial.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NmCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Commercial.CustomerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProduct");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.MovementApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtRegister")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QtLot")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TaxId");

                    b.ToTable("MovementApplication");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.MovementRescue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtRegister")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtRescue")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TaxId");

                    b.ToTable("MovementRescue");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("NmProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VlProfit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtRegister = new DateTime(2021, 3, 17, 1, 44, 56, 156, DateTimeKind.Local).AddTicks(1161),
                            NmProduct = "Aplicação Financeira XPTO",
                            Ticker = "APTEST4",
                            VlProfit = 3000m
                        });
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NmTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QtMaxDayDiscount")
                        .HasColumnType("int");

                    b.Property<int>("QtMinDayDiscount")
                        .HasColumnType("int");

                    b.Property<int>("TaxAction")
                        .HasColumnType("int");

                    b.Property<decimal>("VlPercentageDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Tax");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NmTax = "[IR] Até 1 ano de aplicação: 22,5% sobre o lucro",
                            ProductId = 1,
                            QtMaxDayDiscount = 365,
                            QtMinDayDiscount = 0,
                            TaxAction = 2,
                            VlPercentageDiscount = 22.5m
                        },
                        new
                        {
                            Id = 2,
                            NmTax = "[IR] De 1 a 2 anos de aplicação: 18,5% sobre o lucro",
                            ProductId = 1,
                            QtMaxDayDiscount = 1095,
                            QtMinDayDiscount = 366,
                            TaxAction = 2,
                            VlPercentageDiscount = 18.5m
                        },
                        new
                        {
                            Id = 3,
                            NmTax = "[IR] Acima 2 anos de aplicação: 15% sobre o lucro",
                            ProductId = 1,
                            QtMaxDayDiscount = 999999,
                            QtMinDayDiscount = 1096,
                            TaxAction = 2,
                            VlPercentageDiscount = 15m
                        });
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Commercial.Customer", b =>
                {
                    b.OwnsOne("Aliquota.Domain.Entities.ValueObjects.Telephone", "Telephone", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("NuTelephone")
                                .HasColumnType("varchar(150)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Telephone");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Commercial.CustomerProduct", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Commercial.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Aliquota.Domain.Entities.Financial.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.MovementApplication", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Financial.Product", null)
                        .WithMany("Applications")
                        .HasForeignKey("ProductId");

                    b.HasOne("Aliquota.Domain.Entities.Financial.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.MovementRescue", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Financial.Product", null)
                        .WithMany("Rescues")
                        .HasForeignKey("ProductId");

                    b.HasOne("Aliquota.Domain.Entities.Financial.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.Tax", b =>
                {
                    b.HasOne("Aliquota.Domain.Entities.Financial.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aliquota.Domain.Entities.Financial.Product", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Rescues");
                });
#pragma warning restore 612, 618
        }
    }
}
